const mapTable = [
    {
        'а': 'a', 'е': 'e', 'о': 'o', 'р': 'p',
        'с': 'c', 'у': 'y', 'х': 'x', 'А': 'A',
        'В': 'B', 'Е': 'E', 'К': 'K', 'М': 'M',
        'Н': 'H', 'О': 'O', 'Р': 'P', 'С': 'C',
        'Т': 'T', 'У': 'Y', 'Х': 'X'
    },
    {
        'а': 'a', 'б': '6', 'в': 'B', 'г': 'r',
        'д': 'g', 'е': 'e', 'ё': 'e', 'ж': 'j', 
        'з': '3', 'и': 'u', 'й': 'u', 'к': 'K',
        'л': 'Jl', 'м': 'M', 'н': 'H', 'о': 'o', 
        'п': 'n', 'р': 'p', 'с': 'c', 'т': 'T',
        'у': 'y', 'ф': 'qp', 'х': 'x', 'ц': 'u', 
        'ч': '4', 'ш': 'w', 'щ': 'w', 'ъ': "'",
        'ы': 'bI', 'ь': "'", 'э': '3', 'ю': 'IO',
        'я': '9'
    }, {
        'А': 'A', 'а': 'a', 'Б': 'B', 'б': 'b', 'В': 'V',
        'в': 'v', 'Г': 'G', 'г': 'g', 'Д': 'D', 'д': 'd',
        'Е': 'E', 'е': 'e', 'Ё': 'Yo', 'ё': 'yo', 'Ж': 'Zh',
        'ж': 'zh', 'З': 'Z', 'з': 'z', 'И': 'I', 'и': 'i',
        'Й': 'Y', 'й': 'y', 'К': 'K', 'к': 'k', 'Л': 'L',
        'л': 'l', 'М': 'M', 'м': 'm', 'Н': 'N', 'н': 'n',
        'О': 'O', 'о': 'o', 'П': 'P', 'п': 'p', 'Р': 'R',
        'р': 'r', 'С': 'S', 'с': 's', 'Т': 'T', 'т': 't',
        'У': 'U', 'у': 'u', 'Ф': 'F', 'ф': 'f', 'Х': 'Kh',
        'х': 'kh', 'Ц': 'Ts', 'ц': 'ts', 'Ч': 'Ch', 'ч': 'ch',
        'Ш': 'Sh', 'ш': 'sh', 'Щ': 'Shch', 'щ': 'shch', 'Ъ': '"',
        'ъ': '"', 'Ы': 'Y', 'ы': 'y', 'Ь': '', 'ь': '', 'Э': 'E',
        'э': 'e', 'Ю': 'Yu', 'ю': 'yu', 'Я': 'Ya', 'я': 'ya'    
    }
] as const;

export const romanize = (input: string, level: number): string => {
    if (!input) return "";

    const str = input.replace(/\r\n?/g, "\n").replace(/\s{2,}/, " ").trim();

    let out = "";
    const table = mapTable[level];
    for (const ch of str) {
        out += table[ch as keyof typeof table] ?? ch;
    }

    return out;
}